#
# https://github.com/catatsuy/private-isu?tab=readme-ov-file#ami
#
AWSTemplateFormatVersion: '2010-09-09'
Description: private-isu template

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '192.168.0.0/16'

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '192.168.1.0/24'
      AvailabilityZone: ap-northeast-1a

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP, HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 192.168.0.0/16
        - IpProtocol: -1
          CidrIp: ${ENV_MY_IP}

  #
  # アプリインスタンス
  # - Spot Instanceを利用するためにLaunchTemplateを利用
  # Spot Fleetを利用していない理由
  # - Spot FleetではPrivate Ip Addressを事前に指定できなかったため
  #
  ServerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0bed62bba4100a4b7
        InstanceType: c7g.large
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 30
              VolumeType: gp3
        SecurityGroupIds:
          - !Ref MySecurityGroup
        InstanceMarketOptions:
          MarketType: spot
          SpotOptions:
            #
            # SpotInstanceType: persistent
            # `InstanceInterruptionBehavior: stop` を設定するにはpersistent設定が必須だった
            #
            SpotInstanceType: persistent
            #
            # InstanceInterruptionBehavior: stopにすることで、回収タイミングになった場合、停止状態に移行
            # AWSによって自動再開された場合はSpotInstanceの特性は維持(安価)
            # 手動起動した場合、SpotInstanceではなくなるため注意
            #
            InstanceInterruptionBehavior: stop
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            GITHUB_USER=${ENV_GITHUB_USERNAME}
            mkdir -p /home/isucon/.ssh
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
            chown -R isucon:isucon /home/isucon/.ssh
            chmod 600 /home/isucon/.ssh/authorized_keys
  ServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ServerLaunchTemplate
        Version: !GetAtt ServerLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref MySubnet
      PrivateIpAddress: '192.168.1.10'
      Tags:
        - Key: Name
          Value: isu-1
  ServerEIP:
    Type: AWS::EC2::EIP
  ServerEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref ServerInstance
      EIP: !Ref ServerEIP

  #
  # ベンチマーカー
  #
  BenchmarkerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-034a457f6af55d65d
        InstanceType: c7g.xlarge
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 30
              VolumeType: gp3
        SecurityGroupIds:
          - !Ref MySecurityGroup
        InstanceMarketOptions:
          MarketType: spot
          SpotOptions:
            #
            # SpotInstanceType: persistent
            # `InstanceInterruptionBehavior: stop` を設定するにはpersistent設定が必須だった
            #
            SpotInstanceType: persistent
            #
            # InstanceInterruptionBehavior: stop にすることで、回収タイミングになった場合、停止状態に移行
            # AWSによって自動再開された場合はSpotInstanceの特性は維持(安価)
            # 手動起動した場合、SpotInstanceではなくなるため注意
            #
            InstanceInterruptionBehavior: stop
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            GITHUB_USER=${ENV_GITHUB_USERNAME}
            mkdir -p /home/isucon/.ssh
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
            chown -R isucon:isucon /home/isucon/.ssh
            chmod 600 /home/isucon/.ssh/authorized_keys
  BenchmarkerInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref BenchmarkerLaunchTemplate
        Version: !GetAtt BenchmarkerLaunchTemplate.LatestVersionNumber
      SubnetId: !Ref MySubnet
      PrivateIpAddress: '192.168.1.20'
      Tags:
        - Key: Name
          Value: isu-bench
  BenchmarkerEIP:
    Type: AWS::EC2::EIP
  BenchmarkerEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref BenchmarkerInstance
      EIP: !Ref BenchmarkerEIP

      #  ServerInstance2:
      #    Type: AWS::EC2::Instance
      #    Properties:
      #      Tags:
      #        - Key: Name
      #          Value: isu-2
      #      InstanceType: c7g.large
      #      ImageId: ami-0bed62bba4100a4b7
      #      SubnetId: !Ref MySubnet
      #      PrivateIpAddress: '192.168.1.11'
      #      BlockDeviceMappings:
      #        - DeviceName: /dev/xvda
      #          Ebs:
      #            VolumeSize: 30
      #            VolumeType: gp3
      #      SecurityGroupIds:
      #        - !Ref MySecurityGroup
      #      UserData:
      #        Fn::Base64: !Sub |
      #          #!/bin/bash
      #          GITHUB_USER=${ENV_GITHUB_USERNAME}
      #          mkdir -p /home/isucon/.ssh
      #          curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
      #          chown -R isucon:isucon /home/isucon/.ssh
      #          chmod 600 /home/isucon/.ssh/authorized_keys
      #  ServerEIP2:
      #    Type: AWS::EC2::EIP
      #  ServerEIPAssociation2:
      #    Type: AWS::EC2::EIPAssociation
      #    Properties:
      #      InstanceId: !Ref ServerInstance2
      #      EIP: !Ref ServerEIP2
