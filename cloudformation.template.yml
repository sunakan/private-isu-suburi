#
# https://github.com/catatsuy/private-isu?tab=readme-ov-file#ami
#
AWSTemplateFormatVersion: '2010-09-09'
Description: private-isu template

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '192.168.0.0/16'

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '192.168.1.0/24'
      AvailabilityZone: ap-northeast-1a

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH, HTTP, HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 192.168.0.0/16
        - IpProtocol: -1
          CidrIp: ${ENV_MY_IP}

  IAMFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: spotfleet.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SpotFleetManagement
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeImages
                  - ec2:DescribeSubnets
                  - ec2:RequestSpotInstances
                  - ec2:TerminateInstances
                  - ec2:DescribeInstanceStatus
                  - ec2:CreateTags
                  - ec2:RunInstances
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
                Condition:
                  StringEquals:
                    iam:PassedToService: ec2.amazonaws.com

  #
  # アプリインスタンス
  # - Spot Instanceを利用するためにLaunchTemplateを利用
  # Spot Fleetを利用していない理由
  # - Spot FleetではPrivate Ip Addressを事前に指定できなかったため
  #
  ServerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0bed62bba4100a4b7
        InstanceType: c7g.large
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: isu-1
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 30
              VolumeType: gp3
        NetworkInterfaces:
          - DeviceIndex: 0
            SubnetId: !Ref MySubnet
            Groups:
              - !Ref MySecurityGroup
            PrivateIpAddress: '192.168.1.10'
            AssociatePublicIpAddress: true
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            GITHUB_USER=${ENV_GITHUB_USERNAME}
            mkdir -p /home/isucon/.ssh
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
            chown -R isucon:isucon /home/isucon/.ssh
            chmod 600 /home/isucon/.ssh/authorized_keys
  ServerInstance:
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        IamFleetRole: !GetAtt IAMFleetRole.Arn
        TargetCapacity: 1
        LaunchTemplateConfigs:
          - LaunchTemplateSpecification:
              LaunchTemplateId: !Ref ServerLaunchTemplate
              Version: !GetAtt ServerLaunchTemplate.DefaultVersionNumber
            # EC2のオンデマンドの料金
            # https://aws.amazon.com/jp/ec2/pricing/on-demand/
            Overrides:
              - InstanceType: c7g.large # 0.091 USD/h
        SpotPrice: '0.1'
        #
        # AllocationStrategy: インスタンスの割り当て戦略
        # - priceCapacityOptimized(料金最適化): 料金と中断確率両方を考慮して最適化
        # - capacityOptimized(キャパシティ最適化): 中断確率が最も低いインスタンスタイプを選択
        # - lowestPrice(最安値): 最も安価なインスタンスタイプを選択
        # - diversified(分散): 均等に分散
        #
        AllocationStrategy: capacityOptimized
        #
        # InstanceInterruptionBehavior: インスタンスの中断動作
        # - terminate(終了, デフォ): インスタンスを終了
        # - stop(停止): SpotFleetの場合、リクエストタイプがmaintainの場合のみ有効
        # - hibernate(休止):
        #
        InstanceInterruptionBehavior: stop

  #
  # ベンチマーカー
  #
  BenchmarkerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-034a457f6af55d65d
        InstanceType: c7g.xlarge
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: isu-bench
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 30
              VolumeType: gp3
        NetworkInterfaces:
          - DeviceIndex: 0
            SubnetId: !Ref MySubnet
            Groups:
              - !Ref MySecurityGroup
            PrivateIpAddress: '192.168.1.20'
            AssociatePublicIpAddress: true
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            GITHUB_USER=${ENV_GITHUB_USERNAME}
            mkdir -p /home/isucon/.ssh
            curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
            chown -R isucon:isucon /home/isucon/.ssh
            chmod 600 /home/isucon/.ssh/authorized_keys
  BenchmarkerInstance:
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        IamFleetRole: !GetAtt IAMFleetRole.Arn
        TargetCapacity: 1
        LaunchTemplateConfigs:
          - LaunchTemplateSpecification:
              LaunchTemplateId: !Ref BenchmarkerLaunchTemplate
              Version: !GetAtt BenchmarkerLaunchTemplate.DefaultVersionNumber
            Overrides:
              - InstanceType: c7g.xlarge # 0.1819 USD/h
        SpotPrice: '0.2'
        AllocationStrategy: priceCapacityOptimized
        InstanceInterruptionBehavior: stop

      #  ServerInstance2:
      #    Type: AWS::EC2::Instance
      #    Properties:
      #      Tags:
      #        - Key: Name
      #          Value: isu-2
      #      InstanceType: c7g.large
      #      ImageId: ami-0bed62bba4100a4b7
      #      SubnetId: !Ref MySubnet
      #      PrivateIpAddress: '192.168.1.11'
      #      BlockDeviceMappings:
      #        - DeviceName: /dev/xvda
      #          Ebs:
      #            VolumeSize: 30
      #            VolumeType: gp3
      #      SecurityGroupIds:
      #        - !Ref MySecurityGroup
      #      UserData:
      #        Fn::Base64: !Sub |
      #          #!/bin/bash
      #          GITHUB_USER=${ENV_GITHUB_USERNAME}
      #          mkdir -p /home/isucon/.ssh
      #          curl -s https://github.com/$GITHUB_USER.keys >> /home/isucon/.ssh/authorized_keys
      #          chown -R isucon:isucon /home/isucon/.ssh
      #          chmod 600 /home/isucon/.ssh/authorized_keys
      #  ServerEIP2:
      #    Type: AWS::EC2::EIP
      #  ServerEIPAssociation2:
      #    Type: AWS::EC2::EIPAssociation
      #    Properties:
      #      InstanceId: !Ref ServerInstance2
      #      EIP: !Ref ServerEIP2
